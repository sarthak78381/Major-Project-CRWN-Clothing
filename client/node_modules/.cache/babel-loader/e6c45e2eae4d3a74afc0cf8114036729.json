{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Course\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user-action';\nimport CustomButtom from '../custom-button/button';\nimport FormInput from '../formInput/formInput';\nimport './sign-in.scss';\n\nclass SingIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButtom, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"sign in\"), /*#__PURE__*/React.createElement(CustomButtom, {\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"sign in with google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart)\n});\n\nexport default connect(null, mapDispatchToProps)(SingIn);","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","connect","signInWithGoogle","auth","googleSignInStart","CustomButtom","FormInput","SingIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signInWithGoogle, auth} from '../../firebase/firebase.utils';\r\nimport {googleSignInStart} from '../../redux/user/user-action'\r\nimport CustomButtom from '../custom-button/button';\r\n\r\nimport FormInput from '../formInput/formInput';\r\n\r\nimport './sign-in.scss';\r\n\r\n\r\nclass SingIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const{email, password} = this.state;\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            this.setState({email: '', password: ''});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {value, name } = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render() {\r\n        const {googleSignInStart} = this.props;\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput type=\"email\" id='email'name='email' value={this.state.email} handleChange={this.handleChange} label='email' required/>\r\n                    <FormInput type=\"password\" id='password' name='password' value={this.state.password} handleChange={this.handleChange} label='password' required/>\r\n                    <div className='button'>\r\n                    <CustomButtom type='submit'>sign in</CustomButtom>\r\n                    <CustomButtom onClick = {googleSignInStart} isGoogleSignIn>sign in with google</CustomButtom>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart)\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SingIn);"]},"metadata":{},"sourceType":"module"}
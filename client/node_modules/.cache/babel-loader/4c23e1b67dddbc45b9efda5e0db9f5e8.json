{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Course\\\\crwn-clothing\\\\src\\\\components\\\\signup\\\\signup.jsx\";\nimport React, { userState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user-action';\nimport CustomButtom from '../custom-button/button';\nimport FormInput from '../formInput/formInput';\nimport './signup.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    email,\n    displayName,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    signUpStart({\n      email,\n      displayName,\n      password,\n      confirmPassword\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Don't have an Account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Sign up to create a new one\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    className: \"sign-up-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    id: \"name\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: this.handleChange,\n    label: \"name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: this.handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: this.handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    id: \"cpassword\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: this.handleChange,\n    label: \"confirm password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButtom, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"sign up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: info => dispatch(signUpStart(info))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/components/signup/signup.jsx"],"names":["React","userState","connect","signUpStart","CustomButtom","FormInput","SignUp","userCredentials","setCredentials","useState","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch","info"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAO,eAAP;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAACH,EAAAA;AAAD,CAAD,KAAmB;AAC9B,QAAM,CAACI,eAAD,EAAkBC,cAAlB,IAAoCC,QAAQ,CAAC;AAC/CC,IAAAA,WAAW,EAAE,EADkC;AAE/CC,IAAAA,KAAK,EAAE,EAFwC;AAG/CC,IAAAA,QAAQ,EAAE,EAHqC;AAI/CC,IAAAA,eAAe,EAAE;AAJ8B,GAAD,CAAlD;AAOA,QAAM;AAACF,IAAAA,KAAD;AAAQD,IAAAA,WAAR;AAAqBE,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,MAAkDN,eAAxD;;AAEA,QAAMO,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,WAAW,CAAC;AAACQ,MAAAA,KAAD;AAAOD,MAAAA,WAAP;AAAmBE,MAAAA,QAAnB;AAA4BC,MAAAA;AAA5B,KAAD,CAAX;AACH,GAHD;;AAKA,QAAMI,YAAY,GAAIF,KAAD,IAAW;AAC5B,UAAM;AAACG,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAiBJ,KAAK,CAACK,MAA7B;AACAZ,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACY,IAAD,GAAQD;AAA7B,KAAD,CAAd;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,eAGI;AAAM,IAAA,QAAQ,EAAE,KAAKJ,YAArB;AAAmC,IAAA,SAAS,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,EAAE,EAAC,MAA1B;AAAgC,IAAA,IAAI,EAAC,aAArC;AAAmD,IAAA,KAAK,EAAEJ,WAA1D;AAAuE,IAAA,YAAY,EAAE,KAAKO,YAA1F;AAAwG,IAAA,KAAK,EAAC,MAA9G;AAAqH,IAAA,QAAQ,MAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,EAAE,EAAC,OAA3B;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAA+C,IAAA,KAAK,EAAEN,KAAtD;AAA6D,IAAA,YAAY,EAAE,KAAKM,YAAhF;AAA8F,IAAA,KAAK,EAAC,OAApG;AAA4G,IAAA,QAAQ,MAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,EAAE,EAAC,UAA9B;AAAyC,IAAA,IAAI,EAAC,UAA9C;AAAyD,IAAA,KAAK,EAAEL,QAAhE;AAA0E,IAAA,YAAY,EAAE,KAAKK,YAA7F;AAA2G,IAAA,KAAK,EAAC,UAAjH;AAA4H,IAAA,QAAQ,MAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,EAAE,EAAC,WAA9B;AAA0C,IAAA,IAAI,EAAC,iBAA/C;AAAiE,IAAA,KAAK,EAAEJ,eAAxE;AAAyF,IAAA,YAAY,EAAE,KAAKI,YAA5G;AAA0H,IAAA,KAAK,EAAC,kBAAhI;AAAmJ,IAAA,QAAQ,MAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CAHJ,CADJ;AAaC,CAjCL;;AAmCA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCnB,EAAAA,WAAW,EAAGoB,IAAD,IAAUD,QAAQ,CAACnB,WAAW,CAACoB,IAAD,CAAZ;AADK,CAAL,CAAnC;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, {userState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signUpStart} from '../../redux/user/user-action';\r\nimport CustomButtom from '../custom-button/button';\r\nimport FormInput from '../formInput/formInput';\r\n\r\nimport './signup.scss';\r\n\r\n\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n    const [userCredentials, setCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    \r\n    const {email, displayName, password, confirmPassword} = userCredentials;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        signUpStart({email,displayName,password,confirmPassword});\r\n    }\r\n    \r\n    const handleChange = (event) => {\r\n        const {value, name } = event.target;\r\n        setCredentials({...userCredentials, [name]: value});\r\n    }\r\n    \r\n    return (\r\n        <div className='sign-in'>\r\n            <h2 className='title'>Don't have an Account</h2>\r\n            <span>Sign up to create a new one</span>\r\n            <form onSubmit={this.handleSubmit} className='sign-up-form'>\r\n                <FormInput type=\"text\" id='name'name='displayName' value={displayName} handleChange={this.handleChange} label='name' required/>\r\n                <FormInput type=\"email\" id='email'name='email' value={email} handleChange={this.handleChange} label='email' required/>\r\n                <FormInput type=\"password\" id='password' name='password' value={password} handleChange={this.handleChange} label='password' required/>\r\n                <FormInput type=\"password\" id='cpassword' name='confirmPassword' value={confirmPassword} handleChange={this.handleChange} label='confirm password' required/>\r\n                <CustomButtom type='submit'>sign up</CustomButtom>\r\n            </form>\r\n        </div>\r\n    )\r\n    }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (info) => dispatch(signUpStart(info)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import cartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst AddItems = (cartItems, item) => {\n  if (cartItems.length > 0) {\n    cartItems.forEach((item, idx) => {\n      if (item.id === action.payload.id) {\n        console.log('yes');\n        item.quantity += 1;\n        return { ...state,\n          cartItems: [...cartItems]\n        };\n      } else {\n        console.log('no');\n        return { ...state,\n          cartItems: [...cartItems, action.payload]\n        };\n      }\n    });\n  } else {\n    return { ...state,\n      cartItems: [...cartItems, action.payload]\n    };\n  }\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case cartActionTypes.ADD_ITEMS:\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["cartActionTypes","INITIAL_STATE","hidden","cartItems","AddItems","item","length","forEach","idx","id","action","payload","console","log","quantity","state","cartReducer","type","TOGGLE_CART_HIDDEN","ADD_ITEMS"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,QAAQ,GAAG,CAACD,SAAD,EAAYE,IAAZ,KAAqB;AAClC,MAAGF,SAAS,CAACG,MAAV,GAAiB,CAApB,EAAuB;AACnBH,IAAAA,SAAS,CAACI,OAAV,CAAkB,CAACF,IAAD,EAAQG,GAAR,KAAgB;AAC9B,UAAIH,IAAI,CAACI,EAAL,KAAYC,MAAM,CAACC,OAAP,CAAeF,EAA/B,EAAkC;AAC9BG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAR,QAAAA,IAAI,CAACS,QAAL,IAAiB,CAAjB;AACA,eAAO,EACH,GAAGC,KADA;AAEHZ,UAAAA,SAAS,EAAE,CAAC,GAAGA,SAAJ;AAFR,SAAP;AAIH,OAPD,MAQK;AACDS,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,eAAM,EACF,GAAGE,KADD;AAEFZ,UAAAA,SAAS,EAAE,CAAC,GAAGA,SAAJ,EAAeO,MAAM,CAACC,OAAtB;AAFT,SAAN;AAKH;AACJ,KAjBD;AAkBH,GAnBD,MAmBO;AACH,WAAM,EACF,GAAGI,KADD;AAEFZ,MAAAA,SAAS,EAAE,CAAC,GAAGA,SAAJ,EAAeO,MAAM,CAACC,OAAtB;AAFT,KAAN;AAIH;AACJ,CA1BD;;AA4BA,MAAMK,WAAW,GAAG,CAACD,KAAK,GAAGd,aAAT,EAAwBS,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACO,IAAd;AACI,SAAKjB,eAAe,CAACkB,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHb,QAAAA,MAAM,EAAE,CAACa,KAAK,CAACb;AAFZ,OAAP;;AAIJ,SAAKF,eAAe,CAACmB,SAArB;AAEA;AACI,aAAOJ,KAAP;AATR;AAWH,CAZD;;AAcA,eAAeC,WAAf","sourcesContent":["import cartActionTypes from './cart.types';\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n}\r\n\r\nconst AddItems = (cartItems, item) => {\r\n    if(cartItems.length>0) {\r\n        cartItems.forEach((item,  idx) => {\r\n            if (item.id === action.payload.id){\r\n                console.log('yes');\r\n                item.quantity += 1;\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...cartItems]\r\n                }\r\n            }\r\n            else {\r\n                console.log('no');\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...cartItems, action.payload]\r\n                } \r\n                \r\n            }\r\n        })\r\n    } else {\r\n        return{\r\n            ...state,\r\n            cartItems: [...cartItems, action.payload]\r\n        } \r\n    }\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case cartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden,\r\n            }\r\n        case cartActionTypes.ADD_ITEMS:\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}
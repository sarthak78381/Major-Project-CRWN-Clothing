{"ast":null,"code":"import { shopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const newShopData = convertCollectionsSnapshotToMap(snapshot);\n    });\n  };\n};\nexport const fetchCollectionSuccess = data => ({\n  type: shopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: data\n});","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/shop/shop.action.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTION_START","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","newShopData","fetchCollectionSuccess","data","FETCH_COLLECTION_SUCCESS","payload"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAP,CAA7B;AAKP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AACAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,WAAW,GAAGX,+BAA+B,CAACU,QAAD,CAAnD;AAEH,KAHD;AAIH,GAPD;AAQH,CATM;AAWP,OAAO,MAAME,sBAAsB,GAAIC,IAAD,KAAW;AAC7CX,EAAAA,IAAI,EAAEJ,eAAe,CAACgB,wBADuB;AAE7CC,EAAAA,OAAO,EAAEF;AAFoC,CAAX,CAA/B","sourcesContent":["import {shopActionTypes} from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionStart = () => ({\r\n    type: shopActionTypes.FETCH_COLLECTION_START,\r\n})\r\n\r\n\r\nexport const fetchCollectionStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection(\"collections\");\r\n        dispatch(fetchCollectionStart())\r\n        collectionRef.get().then(snapshot => {\r\n            const newShopData = convertCollectionsSnapshotToMap(snapshot);\r\n    \r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchCollectionSuccess = (data) => ({\r\n    type: shopActionTypes.FETCH_COLLECTION_SUCCESS,\r\n    payload: data,\r\n})"]},"metadata":{},"sourceType":"module"}
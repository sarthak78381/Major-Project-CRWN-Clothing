{"ast":null,"code":"import cartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst AddItems = (cartItems, item) => {\n  if (cartItems.length > 0) {\n    cartItems.forEach(element => {\n      if (element.id === item.id) {\n        element.quantity += 1;\n        return [...cartItems];\n      }\n    });\n  } else {\n    return [...cartItems, item];\n  }\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case cartActionTypes.ADD_ITEMS:\n      return { ...state,\n        cartItems: AddItems(state.cartItems, action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["cartActionTypes","INITIAL_STATE","hidden","cartItems","AddItems","item","length","forEach","element","id","quantity","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEMS","payload"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,QAAQ,GAAG,CAACD,SAAD,EAAYE,IAAZ,KAAqB;AAClC,MAAIF,SAAS,CAACG,MAAV,GAAmB,CAAvB,EAA0B;AACtBH,IAAAA,SAAS,CAACI,OAAV,CAAkBC,OAAO,IAAI;AACzB,UAAIA,OAAO,CAACC,EAAR,KAAeJ,IAAI,CAACI,EAAxB,EAA4B;AACxBD,QAAAA,OAAO,CAACE,QAAR,IAAoB,CAApB;AACA,eAAO,CAAC,GAAGP,SAAJ,CAAP;AACH;AACJ,KALD;AAMH,GAPD,MAOO;AACH,WAAO,CAAC,GAAGA,SAAJ,EAAeE,IAAf,CAAP;AACH;AACJ,CAXD;;AAaA,MAAMM,WAAW,GAAG,CAACC,KAAK,GAAGX,aAAT,EAAwBY,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,eAAe,CAACe,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHV,QAAAA,MAAM,EAAE,CAACU,KAAK,CAACV;AAFZ,OAAP;;AAIJ,SAAKF,eAAe,CAACgB,SAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHT,QAAAA,SAAS,EAAEC,QAAQ,CAACQ,KAAK,CAACT,SAAP,EAAkBU,MAAM,CAACI,OAAzB;AAFhB,OAAP;;AAKJ;AACI,aAAOL,KAAP;AAbR;AAeH,CAhBD;;AAkBA,eAAeD,WAAf","sourcesContent":["import cartActionTypes from './cart.types';\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n}\r\n\r\nconst AddItems = (cartItems, item) => {\r\n    if (cartItems.length > 0) {\r\n        cartItems.forEach(element => {\r\n            if (element.id === item.id) {\r\n                element.quantity += 1;\r\n                return [...cartItems]\r\n            }\r\n        });\r\n    } else {\r\n        return [...cartItems, item]\r\n    }\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case cartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden,\r\n            }\r\n        case cartActionTypes.ADD_ITEMS:\r\n            return {\r\n                ...state, \r\n                cartItems: AddItems(state.cartItems, action.payload),\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}
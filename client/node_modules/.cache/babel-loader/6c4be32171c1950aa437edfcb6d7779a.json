{"ast":null,"code":"import cartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nfunction sameCartItem(cartItem, item) {\n  return cartItems.map(cartItem => cartItem.id === item.id ? { ...cartItem,\n    quantity: cartItem.quantity + 1\n  } : cartItem);\n}\n\nfunction AddItems(cartItems, item) {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === item.id);\n\n  if (existingCartItem) {\n    sameCartItem(cart);\n  }\n\n  return [...cartItems, { ...item\n  }];\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case cartActionTypes.ADD_ITEMS:\n      return { ...state,\n        cartItems: AddItems(state.cartItems, action.payload)\n      };\n\n    case cartActionTypes.INCREASE_QUANTITY:\n      return { ...state,\n        cartItems: [{ ...state.cartItems.map(item => item.id === action.payload.id ? { ...item,\n            quantity: item.quantity + 1\n          } : item)\n        }]\n      };\n\n    case cartActionTypes.DECREASE_QUANTITY:\n      return { ...state,\n        cartItems: [{ ...state.cartItems.map(item => item.id === action.payload.id ? { ...item,\n            quantity: item.quantity - 1\n          } : item)\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["cartActionTypes","INITIAL_STATE","hidden","cartItems","sameCartItem","cartItem","item","map","id","quantity","AddItems","existingCartItem","find","cart","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEMS","payload","INCREASE_QUANTITY","DECREASE_QUANTITY"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,IAAhC,EAAsC;AAClC,SAAOH,SAAS,CAACI,GAAV,CAAcF,QAAQ,IAAIA,QAAQ,CAACG,EAAT,KAAgBF,IAAI,CAACE,EAArB,GAA0B,EAAC,GAAGH,QAAJ;AAAcI,IAAAA,QAAQ,EAAEJ,QAAQ,CAACI,QAAT,GAAoB;AAA5C,GAA1B,GAA2EJ,QAArG,CAAP;AACH;;AAED,SAASK,QAAT,CAAkBP,SAAlB,EAA6BG,IAA7B,EAAmC;AAC/B,QAAMK,gBAAgB,GAAGR,SAAS,CAACS,IAAV,CAAeP,QAAQ,IAAIA,QAAQ,CAACG,EAAT,KAAgBF,IAAI,CAACE,EAAhD,CAAzB;;AAEA,MAAIG,gBAAJ,EAAsB;AAClBP,IAAAA,YAAY,CAACS,IAAD,CAAZ;AACH;;AAED,SAAO,CAAC,GAAGV,SAAJ,EAAe,EAAC,GAAGG;AAAJ,GAAf,CAAP;AACH;;AAED,MAAMQ,WAAW,GAAG,CAACC,KAAK,GAAGd,aAAT,EAAwBe,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,eAAe,CAACkB,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHb,QAAAA,MAAM,EAAE,CAACa,KAAK,CAACb;AAFZ,OAAP;;AAIJ,SAAKF,eAAe,CAACmB,SAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHZ,QAAAA,SAAS,EAAEO,QAAQ,CAACK,KAAK,CAACZ,SAAP,EAAkBa,MAAM,CAACI,OAAzB;AAFhB,OAAP;;AAIJ,SAAKpB,eAAe,CAACqB,iBAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHZ,QAAAA,SAAS,EAAE,CAAC,EAAC,GAAGY,KAAK,CAACZ,SAAN,CAAgBI,GAAhB,CAAoBD,IAAI,IAAGA,IAAI,CAACE,EAAL,KAAYQ,MAAM,CAACI,OAAP,CAAeZ,EAA3B,GAA8B,EAAC,GAAGF,IAAJ;AAAUG,YAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAApC,WAA9B,GAAqEH,IAAhG;AAAJ,SAAD;AAFR,OAAP;;AAIJ,SAAKN,eAAe,CAACsB,iBAArB;AACI,aAAO,EACH,GAAGP,KADA;AAEHZ,QAAAA,SAAS,EAAE,CAAC,EAAC,GAAGY,KAAK,CAACZ,SAAN,CAAgBI,GAAhB,CAAoBD,IAAI,IAAGA,IAAI,CAACE,EAAL,KAAYQ,MAAM,CAACI,OAAP,CAAeZ,EAA3B,GAA8B,EAAC,GAAGF,IAAJ;AAAUG,YAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAApC,WAA9B,GAAqEH,IAAhG;AAAJ,SAAD;AAFR,OAAP;;AAKJ;AACI,aAAOS,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["import cartActionTypes from './cart.types';\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n}\r\n\r\nfunction sameCartItem(cartItem, item) {\r\n    return cartItems.map(cartItem => cartItem.id === item.id ? {...cartItem, quantity: cartItem.quantity + 1} : cartItem)\r\n}\r\n\r\nfunction AddItems(cartItems, item) {\r\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === item.id);\r\n\r\n    if (existingCartItem) {\r\n        sameCartItem(cart)\r\n    }\r\n\r\n    return [...cartItems, {...item}]\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case cartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden,\r\n            }\r\n        case cartActionTypes.ADD_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: AddItems(state.cartItems, action.payload)\r\n            }\r\n        case cartActionTypes.INCREASE_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartItems: [{...state.cartItems.map(item=> item.id === action.payload.id?{...item, quantity: item.quantity + 1}:item)}]\r\n            }\r\n        case cartActionTypes.DECREASE_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartItems: [{...state.cartItems.map(item=> item.id === action.payload.id?{...item, quantity: item.quantity - 1}:item)}]\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Course\\\\crwn-clothing\\\\src\\\\components\\\\shop\\\\shop-page-component.jsx\";\nimport React, { useEffect } from 'react';\nimport '../shop/shop-page.scss';\nimport { Route } from 'react-router-dom';\nimport CollectionOverview from '../collection-overview/collection-overview';\nimport CollectionPage from '../collection/collection';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.action';\nimport { selectIsfetching } from '../../redux/shop/shop.selector';\nimport { connect } from 'react-redux';\nimport Loader from '../loader/loader';\n\nconst ShopPage = ({\n  match,\n  isFetching,\n  setShopData\n}) => {\n  useEffect(() => {\n    setShopData();\n  }, [fetchCollectionsStart]);\n  return isFetching ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsfetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setShopData: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/components/shop/shop-page-component.jsx"],"names":["React","useEffect","Route","CollectionOverview","CollectionPage","createStructuredSelector","fetchCollectionsStart","selectIsfetching","connect","Loader","ShopPage","match","isFetching","setShopData","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,wBAAP;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,qBAAR,QAAoC,8BAApC;AACA,SAAQC,gBAAR,QAA+B,gCAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,UAAP;AAAkBC,EAAAA;AAAlB,CAAD,KAAoC;AAEjDZ,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACP,qBAAD,CAFM,CAAT;AAIA,SAAOM,UAAU,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACb;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAE,KAAF;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,IAAI,EAAG,GAAED,KAAK,CAACG,IAAK,EAAlC;AAAsC,IAAA,SAAS,EAAEX,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAE,KAAF;AAAS,IAAA,IAAI,EAAG,GAAEQ,KAAK,CAACG,IAAK,gBAA7B;AAA+C,IAAA,SAAS,EAAEV,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CAbD;;AAeA,MAAMW,eAAe,GAAGV,wBAAwB,CAAC;AAC7CO,EAAAA,UAAU,EAAEL;AADiC,CAAD,CAAhD;;AAIA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpCJ,EAAAA,WAAW,EAAE,MAAMI,QAAQ,CAACX,qBAAqB,EAAtB;AADS,CAAL,CAAnC;;AAMA,eAAeE,OAAO,CAACO,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CN,QAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport '../shop/shop-page.scss';\r\nimport {Route} from 'react-router-dom'\r\nimport CollectionOverview from '../collection-overview/collection-overview';\r\nimport CollectionPage from '../collection/collection';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {fetchCollectionsStart} from '../../redux/shop/shop.action';\r\nimport {selectIsfetching} from '../../redux/shop/shop.selector'\r\nimport {connect} from 'react-redux';\r\nimport Loader from '../loader/loader'\r\n\r\nconst ShopPage = ({match,isFetching,setShopData}) => {\r\n\r\n    useEffect(() => {\r\n        setShopData();\r\n    }, [fetchCollectionsStart])\r\n\r\n    return isFetching ? <Loader/>: (\r\n        <div className = 'shop-page'>\r\n            < Route exact path={`${match.path}`}  component={CollectionOverview} />\r\n            < Route  path={`${match.path}/:collectionId`}  component={CollectionPage} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isFetching: selectIsfetching\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setShopData: () => dispatch(fetchCollectionsStart())\r\n})\r\n\r\n\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}
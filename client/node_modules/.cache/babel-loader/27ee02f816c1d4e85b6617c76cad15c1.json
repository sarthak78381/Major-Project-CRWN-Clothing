{"ast":null,"code":"import cartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nfunction removeItem(cartItems, item) {\n  cartItems.filter(citem => citem, id);\n  console.log(cartItems);\n}\n\nfunction addSameCartItem(cartItems, item) {\n  return cartItems.map(cartItem => cartItem.id === item.id ? { ...cartItem,\n    quantity: cartItem.quantity + 1\n  } : cartItem);\n}\n\nfunction subSameCartItem(cartItems, item) {\n  if (item.quantity === 1) {\n    removeItem(cartItems, item);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === item.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n}\n\nfunction AddItems(cartItems, item) {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === item.id);\n\n  if (existingCartItem) {\n    return addSameCartItem(cartItems, item);\n  }\n\n  return [...cartItems, { ...item\n  }];\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case cartActionTypes.ADD_ITEMS:\n      return { ...state,\n        cartItems: AddItems(state.cartItems, action.payload)\n      };\n\n    case cartActionTypes.INCREASE_QUANTITY:\n      return { ...state,\n        cartItems: addSameCartItem(state.cartItems, action.payload)\n      };\n\n    case cartActionTypes.DECREASE_QUANTITY:\n      return { ...state,\n        cartItems: subSameCartItem(state.cartItems, action.payload)\n      };\n\n    case cartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItem(state.cartItems, action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["cartActionTypes","INITIAL_STATE","hidden","cartItems","removeItem","item","filter","citem","id","console","log","addSameCartItem","map","cartItem","quantity","subSameCartItem","AddItems","existingCartItem","find","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEMS","payload","INCREASE_QUANTITY","DECREASE_QUANTITY","REMOVE_ITEM"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,SAASC,UAAT,CAAoBD,SAApB,EAA+BE,IAA/B,EAAqC;AACjCF,EAAAA,SAAS,CAACG,MAAV,CAAiBC,KAAK,IAAIA,KAA1B,EAAgCC,EAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACH;;AAED,SAASQ,eAAT,CAAyBR,SAAzB,EAAoCE,IAApC,EAA0C;AACtC,SAAOF,SAAS,CAACS,GAAV,CAAcC,QAAQ,IAAIA,QAAQ,CAACL,EAAT,KAAgBH,IAAI,CAACG,EAArB,GAA0B,EAAC,GAAGK,QAAJ;AAAcC,IAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAoB;AAA5C,GAA1B,GAA2ED,QAArG,CAAP;AACH;;AACD,SAASE,eAAT,CAAyBZ,SAAzB,EAAoCE,IAApC,EAA0C;AAEtC,MAAGA,IAAI,CAACS,QAAL,KAAkB,CAArB,EAAwB;AACpBV,IAAAA,UAAU,CAACD,SAAD,EAAYE,IAAZ,CAAV;AACH;;AAED,SAAOF,SAAS,CAACS,GAAV,CAAcC,QAAQ,IAAIA,QAAQ,CAACL,EAAT,KAAgBH,IAAI,CAACG,EAArB,GAA0B,EAAC,GAAGK,QAAJ;AAAcC,IAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAoB;AAA5C,GAA1B,GAA2ED,QAArG,CAAP;AACH;;AAED,SAASG,QAAT,CAAkBb,SAAlB,EAA6BE,IAA7B,EAAmC;AAC/B,QAAMY,gBAAgB,GAAGd,SAAS,CAACe,IAAV,CAAeL,QAAQ,IAAIA,QAAQ,CAACL,EAAT,KAAgBH,IAAI,CAACG,EAAhD,CAAzB;;AAEA,MAAIS,gBAAJ,EAAsB;AAClB,WAAON,eAAe,CAACR,SAAD,EAAYE,IAAZ,CAAtB;AACH;;AAED,SAAO,CAAC,GAAGF,SAAJ,EAAe,EAAC,GAAGE;AAAJ,GAAf,CAAP;AACH;;AAED,MAAMc,WAAW,GAAG,CAACC,KAAK,GAAGnB,aAAT,EAAwBoB,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKtB,eAAe,CAACuB,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHlB,QAAAA,MAAM,EAAE,CAACkB,KAAK,CAAClB;AAFZ,OAAP;;AAIJ,SAAKF,eAAe,CAACwB,SAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHjB,QAAAA,SAAS,EAAEa,QAAQ,CAACI,KAAK,CAACjB,SAAP,EAAkBkB,MAAM,CAACI,OAAzB;AAFhB,OAAP;;AAIJ,SAAKzB,eAAe,CAAC0B,iBAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHjB,QAAAA,SAAS,EAAEQ,eAAe,CAACS,KAAK,CAACjB,SAAP,EAAkBkB,MAAM,CAACI,OAAzB;AAFvB,OAAP;;AAIJ,SAAKzB,eAAe,CAAC2B,iBAArB;AACI,aAAO,EACH,GAAGP,KADA;AAEHjB,QAAAA,SAAS,EAAEY,eAAe,CAACK,KAAK,CAACjB,SAAP,EAAkBkB,MAAM,CAACI,OAAzB;AAFvB,OAAP;;AAIJ,SAAKzB,eAAe,CAAC4B,WAArB;AACI,aAAM,EACF,GAAGR,KADD;AAEFjB,QAAAA,SAAS,EAAEC,UAAU,CAACgB,KAAK,CAACjB,SAAP,EAAkBkB,MAAM,CAACI,OAAzB;AAFnB,OAAN;;AAKJ;AACI,aAAOL,KAAP;AA5BR;AA8BH,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["import cartActionTypes from './cart.types';\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n}\r\n\r\nfunction removeItem(cartItems, item) {\r\n    cartItems.filter(citem => citem,id)\r\n    console.log(cartItems)\r\n}\r\n\r\nfunction addSameCartItem(cartItems, item) {\r\n    return cartItems.map(cartItem => cartItem.id === item.id ? {...cartItem, quantity: cartItem.quantity + 1} : cartItem)\r\n}\r\nfunction subSameCartItem(cartItems, item) {\r\n\r\n    if(item.quantity === 1) {\r\n        removeItem(cartItems, item);\r\n    }\r\n\r\n    return cartItems.map(cartItem => cartItem.id === item.id ? {...cartItem, quantity: cartItem.quantity - 1} : cartItem)\r\n}\r\n\r\nfunction AddItems(cartItems, item) {\r\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === item.id);\r\n\r\n    if (existingCartItem) {\r\n        return addSameCartItem(cartItems, item);\r\n    }\r\n\r\n    return [...cartItems, {...item}]\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case cartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden,\r\n            }\r\n        case cartActionTypes.ADD_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: AddItems(state.cartItems, action.payload)\r\n            }\r\n        case cartActionTypes.INCREASE_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartItems: addSameCartItem(state.cartItems, action.payload)\r\n            }\r\n        case cartActionTypes.DECREASE_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartItems: subSameCartItem(state.cartItems, action.payload)\r\n            }\r\n        case cartActionTypes.REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: removeItem(state.cartItems, action.payload)\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}
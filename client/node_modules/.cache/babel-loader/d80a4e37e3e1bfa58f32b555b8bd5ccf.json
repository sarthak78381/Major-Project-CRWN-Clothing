{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\n\nconst addExpense = ({\n  description = '',\n  note = '',\n  amount = 0,\n  createdAt = 0,\n  id = 0\n} = {}) => ({\n  type: 'ADD_EXPENSES',\n  expenses: {\n    id,\n    description,\n    note,\n    amount,\n    createdAt\n  }\n});\n\nconst removeExpense = id => ({\n  type: 'REMOVE_EXPENSES',\n  id\n});\n\nconst expensesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_EXPENSES':\n      return [...state, action.expenses];\n\n    case 'REMOVE_EXPENSES':\n      return;\n\n    default:\n      return state;\n  }\n};\n\nconst defaultFilter = {\n  text: '',\n  sortBy: 'date',\n  startDate: undefined,\n  endDate: undefined\n};\n\nconst filtersReducer = (state = defaultFilter, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst demoState = {\n  expenses: [{\n    id: 'hdkjbskjd',\n    description: 'january Rent',\n    note: 'this was the final payment for that addres',\n    amount: 54500,\n    createdAt: 0\n  }],\n  filters: {\n    text: 'rent',\n    sortBy: 'amount',\n    startDate: undefined,\n    endDate: undefined\n  }\n};\nconst store = createStore(combineReducers({\n  expenses: expensesReducer,\n  filters: filtersReducer\n}));\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nconst expenseone = store.dispatch(addExpense({\n  description: 'rent',\n  amount: 100,\n  id: 0\n}));\nconst expensetwo = store.dispatch(addExpense({\n  description: 'coffee',\n  amount: 300,\n  id: 1\n}));\nstore.dispatch(removeExpense({\n  id: expenseone.expenses.id\n}));\nexport default store;","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/store.js"],"names":["createStore","combineReducers","addExpense","description","note","amount","createdAt","id","type","expenses","removeExpense","expensesReducer","state","action","defaultFilter","text","sortBy","startDate","undefined","endDate","filtersReducer","demoState","filters","store","subscribe","console","log","getState","expenseone","dispatch","expensetwo"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,WAAW,GAAG,EAAf;AAAmBC,EAAAA,IAAI,GAAG,EAA1B;AAA8BC,EAAAA,MAAM,GAAG,CAAvC;AAA0CC,EAAAA,SAAS,GAAG,CAAtD;AAAyDC,EAAAA,EAAE,GAAG;AAA9D,IAAmE,EAApE,MAA4E;AAC3FC,EAAAA,IAAI,EAAE,cADqF;AAE3FC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,EADM;AAENJ,IAAAA,WAFM;AAGNC,IAAAA,IAHM;AAINC,IAAAA,MAJM;AAKNC,IAAAA;AALM;AAFiF,CAA5E,CAAnB;;AAUA,MAAMI,aAAa,GAAIH,EAAD,KAAS;AAC3BC,EAAAA,IAAI,EAAE,iBADqB;AAE3BD,EAAAA;AAF2B,CAAT,CAAtB;;AAKA,MAAMI,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC5C,UAAOA,MAAM,CAACL,IAAd;AACI,SAAK,cAAL;AACI,aAAO,CACH,GAAGI,KADA,EAEHC,MAAM,CAACJ,QAFJ,CAAP;;AAIJ,SAAK,iBAAL;AACI;;AACJ;AACI,aAAOG,KAAP;AATR;AAWH,CAZD;;AAcA,MAAME,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,MAAM,EAAE,MAFU;AAGlBC,EAAAA,SAAS,EAAEC,SAHO;AAIlBC,EAAAA,OAAO,EAAED;AAJS,CAAtB;;AAOA,MAAME,cAAc,GAAG,CAACR,KAAK,GAAGE,aAAT,EAAwBD,MAAxB,KAAmC;AACtD,UAAOA,MAAM,CAACL,IAAd;AACI;AACI,aAAOI,KAAP;AAFR;AAIH,CALD;;AAOA,MAAMS,SAAS,GAAG;AACdZ,EAAAA,QAAQ,EAAE,CAAC;AACPF,IAAAA,EAAE,EAAE,WADG;AAEPJ,IAAAA,WAAW,EAAE,cAFN;AAGPC,IAAAA,IAAI,EAAE,4CAHC;AAIPC,IAAAA,MAAM,EAAE,KAJD;AAKPC,IAAAA,SAAS,EAAE;AALJ,GAAD,CADI;AAQdgB,EAAAA,OAAO,EAAE;AACLP,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,MAAM,EAAE,QAFH;AAGLC,IAAAA,SAAS,EAAEC,SAHN;AAILC,IAAAA,OAAO,EAAED;AAJJ;AARK,CAAlB;AAgBA,MAAMK,KAAK,GAAGvB,WAAW,CAACC,eAAe,CAAC;AACtCQ,EAAAA,QAAQ,EAAEE,eAD4B;AAEtCW,EAAAA,OAAO,EAAEF;AAF6B,CAAD,CAAhB,CAAzB;AAKAG,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACH,CAFD;AAGA,MAAMC,UAAU,GAAGL,KAAK,CAACM,QAAN,CAAe3B,UAAU,CAAC;AACzCC,EAAAA,WAAW,EAAE,MAD4B;AACpBE,EAAAA,MAAM,EAAE,GADY;AACPE,EAAAA,EAAE,EAAE;AADG,CAAD,CAAzB,CAAnB;AAIA,MAAMuB,UAAU,GAAGP,KAAK,CAACM,QAAN,CAAe3B,UAAU,CAAC;AACzCC,EAAAA,WAAW,EAAE,QAD4B;AAClBE,EAAAA,MAAM,EAAE,GADU;AACLE,EAAAA,EAAE,EAAE;AADC,CAAD,CAAzB,CAAnB;AAIAgB,KAAK,CAACM,QAAN,CAAenB,aAAa,CAAC;AAACH,EAAAA,EAAE,EAAEqB,UAAU,CAACnB,QAAX,CAAoBF;AAAzB,CAAD,CAA5B;AAGA,eAAegB,KAAf","sourcesContent":["import {createStore, combineReducers} from 'redux';\r\n\r\n\r\nconst addExpense = ({description = '', note = '', amount = 0, createdAt = 0, id = 0} = {}) => ({\r\n    type: 'ADD_EXPENSES',\r\n    expenses: {\r\n        id,\r\n        description,\r\n        note,\r\n        amount,\r\n        createdAt\r\n    }\r\n})\r\nconst removeExpense = (id) => ({\r\n    type: 'REMOVE_EXPENSES',\r\n    id,\r\n})\r\n\r\nconst expensesReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_EXPENSES':\r\n            return [\r\n                ...state,\r\n                action.expenses\r\n            ]\r\n        case 'REMOVE_EXPENSES':\r\n            return\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst defaultFilter = {\r\n    text: '',\r\n    sortBy: 'date',\r\n    startDate: undefined,\r\n    endDate: undefined\r\n}\r\n\r\nconst filtersReducer = (state = defaultFilter, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst demoState = {\r\n    expenses: [{\r\n        id: 'hdkjbskjd',\r\n        description: 'january Rent',\r\n        note: 'this was the final payment for that addres',\r\n        amount: 54500,\r\n        createdAt: 0\r\n    }],\r\n    filters: {\r\n        text: 'rent',\r\n        sortBy: 'amount',\r\n        startDate: undefined,\r\n        endDate: undefined\r\n    }\r\n}\r\n\r\nconst store = createStore(combineReducers({\r\n    expenses: expensesReducer,\r\n    filters: filtersReducer,\r\n}));\r\n\r\nstore.subscribe(() => {\r\n    console.log(store.getState());\r\n})\r\nconst expenseone = store.dispatch(addExpense({\r\n    description: 'rent', amount: 100, id: 0\r\n}))\r\n\r\nconst expensetwo = store.dispatch(addExpense({\r\n    description: 'coffee', amount: 300, id: 1\r\n}))\r\n\r\nstore.dispatch(removeExpense({id: expenseone.expenses.id}))\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import cartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nfunction AddItems(cartItems, item) {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === item.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === item.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...item\n  }];\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case cartActionTypes.ADD_ITEMS:\n      return { ...state,\n        cartItems: AddItems(state.cartItems, action.payload)\n      };\n\n    case cartActionTypes.INCREASE_QUANTITY:\n      return { ...state,\n        cartItems: [{ ...state.cartItems.map(item)\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["cartActionTypes","INITIAL_STATE","hidden","cartItems","AddItems","item","existingCartItem","find","cartItem","id","map","quantity","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEMS","payload","INCREASE_QUANTITY"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,SAASC,QAAT,CAAkBD,SAAlB,EAA6BE,IAA7B,EAAmC;AAC/B,QAAMC,gBAAgB,GAAGH,SAAS,CAACI,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,IAAI,CAACI,EAAhD,CAAzB;;AAEA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOH,SAAS,CAACO,GAAV,CAAcF,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,IAAI,CAACI,EAArB,GAA0B,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA5C,KAA1B,GAA2EH,QAArG,CAAP;AACH;;AAED,SAAO,CAAC,GAAGL,SAAJ,EAAe,EAAC,GAAGE;AAAJ,GAAf,CAAP;AACH;;AAED,MAAMO,WAAW,GAAG,CAACC,KAAK,GAAGZ,aAAT,EAAwBa,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,eAAe,CAACgB,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHX,QAAAA,MAAM,EAAE,CAACW,KAAK,CAACX;AAFZ,OAAP;;AAIJ,SAAKF,eAAe,CAACiB,SAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHV,QAAAA,SAAS,EAAEC,QAAQ,CAACS,KAAK,CAACV,SAAP,EAAkBW,MAAM,CAACI,OAAzB;AAFhB,OAAP;;AAIJ,SAAKlB,eAAe,CAACmB,iBAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHV,QAAAA,SAAS,EAAE,CAAC,EAAC,GAAGU,KAAK,CAACV,SAAN,CAAgBO,GAAhB,CAAoBL,IAApB;AAAJ,SAAD;AAFR,OAAP;;AAKJ;AACI,aAAOQ,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import cartActionTypes from './cart.types';\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n}\r\n\r\nfunction AddItems(cartItems, item) {\r\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === item.id);\r\n\r\n    if (existingCartItem) {\r\n        return cartItems.map(cartItem => cartItem.id === item.id ? {...cartItem, quantity: cartItem.quantity + 1} : cartItem)\r\n    }\r\n\r\n    return [...cartItems, {...item}]\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case cartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden,\r\n            }\r\n        case cartActionTypes.ADD_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: AddItems(state.cartItems, action.payload)\r\n            }\r\n        case cartActionTypes.INCREASE_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartItems: [{...state.cartItems.map(item)}]\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}
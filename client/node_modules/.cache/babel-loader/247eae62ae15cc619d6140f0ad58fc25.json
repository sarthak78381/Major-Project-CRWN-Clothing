{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport combineReducers from '../redux/root-reducer';\nimport createSagaMiddleqare from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.saga';\nimport { fetchCollectionStartAsync } from './shop/shop.action';\nconst sagaMiddleware = createSagaMiddleqare();\nconst middleWares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleWares.push(logger);\n}\n\nexport const store = createStore(combineReducers, applyMiddleware(...middleWares));\nsagaMiddleware.run(fetchCollectionStartAsync);\nexport const persister = persistStore(store);","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","combineReducers","createSagaMiddleqare","fetchCollectionsStart","fetchCollectionStartAsync","sagaMiddleware","middleWares","process","env","NODE_ENV","push","store","run","persister"],"mappings":"AACA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,qBAAR,QAAoC,kBAApC;AACA,SAASC,yBAAT,QAA0C,oBAA1C;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACH;;AAED,OAAO,MAAMY,KAAK,GAAGd,WAAW,CAACI,eAAD,EAAkBH,eAAe,CAAC,GAAGQ,WAAJ,CAAjC,CAAzB;AACPD,cAAc,CAACO,GAAf,CAAmBR,yBAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B","sourcesContent":["\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport {persistStore} from 'redux-persist';\r\nimport combineReducers from '../redux/root-reducer';\r\nimport createSagaMiddleqare from 'redux-saga';\r\nimport {fetchCollectionsStart} from './shop/shop.saga'\r\nimport { fetchCollectionStartAsync } from './shop/shop.action';\r\n\r\nconst sagaMiddleware = createSagaMiddleqare();\r\nconst middleWares = [sagaMiddleware];\r\n\r\nif(process.env.NODE_ENV === 'development') {\r\n    middleWares.push(logger);\r\n}\r\n\r\nexport const store = createStore(combineReducers, applyMiddleware(...middleWares));\r\nsagaMiddleware.run(fetchCollectionStartAsync)\r\n\r\nexport const persister = persistStore(store);"]},"metadata":{},"sourceType":"module"}
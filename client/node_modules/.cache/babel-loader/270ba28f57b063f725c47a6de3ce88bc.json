{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInFail, googleSignInSuccess, emailSignInFail, emailSignInSuccess } from './user-action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFail(error.message));\n  }\n}\nexport function* signInWithEmail() {\n  try {} catch (error) {\n    yield put(googleSignInFail(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInFail","googleSignInSuccess","emailSignInFail","emailSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","message","signInWithEmail","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","userSaga"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA+D,+BAA/D;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA8CC,eAA9C,EAA+DC,kBAA/D,QAAwF,eAAxF;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACQ,mBAAmB,CAAC;AAC1BS,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADS;AAE1B,SAAGF,YAAY,CAACG,IAAb;AAFuB,KAAD,CAApB,CAAT;AAIH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACO,gBAAgB,CAACY,KAAK,CAACC,OAAP,CAAjB,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,eAAV,GAA4B;AAC/B,MAAG,CAEF,CAFD,CAEE,OAAOF,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACO,gBAAgB,CAACY,KAAK,CAACC,OAAP,CAAjB,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,mBAAV,GAAgC;AACnC,QAAMvB,UAAU,CAACI,eAAe,CAACoB,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACH;AACD,OAAO,UAAUa,kBAAV,GAA+B;AAClC,QAAMzB,UAAU,CAACI,eAAe,CAACoB,oBAAjB,EAAuCF,eAAvC,CAAhB;AACH;AAED,OAAO,UAAUI,QAAV,GAAqB;AACxB,QAAMxB,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,EAA4BpB,IAAI,CAACsB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport userActionTypes from './user.types';\r\nimport {auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport {googleSignInFail, googleSignInSuccess,emailSignInFail, emailSignInSuccess} from './user-action';\r\n\r\nexport function* signInWithGoogle() {\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(googleSignInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    } catch (error) {\r\n        yield put(googleSignInFail(error.message));\r\n    }\r\n}\r\nexport function* signInWithEmail() {\r\n    try{\r\n       \r\n    } catch (error) {\r\n        yield put(googleSignInFail(error.message));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}
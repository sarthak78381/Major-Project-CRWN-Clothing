{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInFail, signInSuccess } from './user-action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFail(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFail(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","signInFail","signInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","googleSignInFail","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFail","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA+D,+BAA/D;AACA,SAAQC,UAAR,EAAoBC,aAApB,QAAwC,eAAxC;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACQ,aAAa,CAAC;AACpBO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AAEpB,SAAGF,YAAY,CAACG,IAAb;AAFiB,KAAD,CAAd,CAAT;AAIH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACkB,gBAAgB,CAACD,KAAK,CAACE,OAAP,CAAjB,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAG;AACA,UAAM;AAACb,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMX,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACyB,kBAAkB,CAAC;AACxBV,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADO;AAExB,SAAGF,YAAY,CAACG,IAAb;AAFqB,KAAD,CAAnB,CAAT;AAIF,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAAC0B,eAAe,CAACT,KAAK,CAACE,OAAP,CAAhB,CAAT;AACH;AACJ;AAED,OAAO,UAAUQ,mBAAV,GAAgC;AACnC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAuCnB,gBAAvC,CAAhB;AACH;AACD,OAAO,UAAUoB,kBAAV,GAA+B;AAClC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCV,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUW,QAAV,GAAqB;AACxB,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA4BzB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport userActionTypes from './user.types';\r\nimport {auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport {signInFail, signInSuccess} from './user-action';\r\n\r\nexport function* signInWithGoogle() {\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    } catch (error) {\r\n        yield put(googleSignInFail(error.message));\r\n    }\r\n}\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try{\r\n       const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n       const userRef = yield call(createUserProfileDocument, user);\r\n       const userSnapshot = yield userRef.get();\r\n       yield put(emailSignInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    } catch (error) {\r\n        yield put(emailSignInFail(error.message));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}
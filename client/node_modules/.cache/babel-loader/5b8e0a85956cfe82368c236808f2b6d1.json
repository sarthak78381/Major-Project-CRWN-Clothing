{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Course\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-action';\nimport CustomButtom from '../custom-button/button';\nimport FormInput from '../formInput/formInput';\nimport './sign-in.scss';\n\nconst SingIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await emailSignInStart({\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButtom, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"sign in\"), /*#__PURE__*/React.createElement(CustomButtom, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"sign in with google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: emailAndPassword => dispatch(emailSignInStart(emailAndPassword))\n});\n\nexport default connect(null, mapDispatchToProps)(SingIn);","map":{"version":3,"sources":["D:/React Course/crwn-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","useState","connect","googleSignInStart","emailSignInStart","CustomButtom","FormInput","SingIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch","emailAndPassword"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,8BAAlD;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAO,gBAAP;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACH,EAAAA,gBAAD;AAAmBD,EAAAA;AAAnB,CAAD,KAA2C;AACvD,QAAM,CAACK,eAAD,EAAkBC,cAAlB,IAAoCR,QAAQ,CAAC;AAC/CS,IAAAA,KAAK,EAAE,EADwC;AAE/CC,IAAAA,QAAQ,EAAE;AAFqC,GAAD,CAAlD;AAKA,QAAK;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBH,eAAzB;;AAEC,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMV,gBAAgB,CAAC;AAACM,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAD,CAAtB;AACH,GAHD;;AAKA,QAAMI,YAAY,GAAIF,KAAD,IAAW;AAC5B,UAAM;AAACG,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAiBJ,KAAK,CAACK,MAA7B;AACAT,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACS,IAAD,GAAQD;AAA7B,KAAD,CAAd;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,eAGI;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,EAAE,EAAC,OAA3B;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAA+C,IAAA,KAAK,EAAEF,KAAtD;AAA6D,IAAA,YAAY,EAAEK,YAA3E;AAAyF,IAAA,KAAK,EAAC,OAA/F;AAAuG,IAAA,QAAQ,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,EAAE,EAAC,UAA9B;AAAyC,IAAA,IAAI,EAAC,UAA9C;AAAyD,IAAA,KAAK,EAAEJ,QAAhE;AAA0E,IAAA,YAAY,EAAEI,YAAxF;AAAsG,IAAA,KAAK,EAAC,UAA5G;AAAuH,IAAA,QAAQ,MAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAIZ,iBAAvC;AAA0D,IAAA,cAAc,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFA,CAHJ,CAHJ,CADJ;AAcC,CAhCL;;AAkCA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,iBAAiB,EAAE,MAAMiB,QAAQ,CAACjB,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAGiB,gBAAD,IAAsBD,QAAQ,CAAChB,gBAAgB,CAACiB,gBAAD,CAAjB;AAFZ,CAAL,CAAnC;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiCZ,MAAjC,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user-action'\r\nimport CustomButtom from '../custom-button/button';\r\n\r\nimport FormInput from '../formInput/formInput';\r\n\r\nimport './sign-in.scss';\r\n\r\n\r\nconst SingIn = ({emailSignInStart, googleSignInStart}) => {\r\n   const [userCredentials, setCredentials] = useState({\r\n       email: '',\r\n       password: ''\r\n   })\r\n\r\n   const{email, password} = userCredentials\r\n   ;\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await emailSignInStart({email,password})\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {value, name } = event.target;\r\n        setCredentials({...userCredentials, [name]: value});\r\n    }\r\n\r\n    return (\r\n        <div className='sign-in'>\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput type=\"email\" id='email'name='email' value={email} handleChange={handleChange} label='email' required/>\r\n                <FormInput type=\"password\" id='password' name='password' value={password} handleChange={handleChange} label='password' required/>\r\n                <div className='button'>\r\n                <CustomButtom type='submit'>sign in</CustomButtom>\r\n                <CustomButtom type='button' onClick = {googleSignInStart} isGoogleSignIn>sign in with google</CustomButtom>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n    }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (emailAndPassword) => dispatch(emailSignInStart(emailAndPassword)),\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SingIn);"]},"metadata":{},"sourceType":"module"}